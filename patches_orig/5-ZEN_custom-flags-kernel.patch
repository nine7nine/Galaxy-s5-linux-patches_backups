diff --git a/Makefile b/Makefile
index 860c26a..311e065 100644
--- a/Makefile
+++ b/Makefile
@@ -331,13 +331,13 @@ CHECK		= sparse
 
 CHECKFLAGS     := -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ \
 		  -Wbitwise -Wno-return-void $(CF)
-CFLAGS_MODULE   =
-AFLAGS_MODULE   =
-LDFLAGS_MODULE  =
-CFLAGS_KERNEL	=
-AFLAGS_KERNEL	=
-CFLAGS_GCOV	= -fprofile-arcs -ftest-coverage
 
+CFLAGS_MODULE	= $(MODFLAGS) $(CUSTOM_CFLAGS)
+AFLAGS_MODULE	= $(MODFLAGS) $(CUSTOM_AFLAGS)
+LDFLAGS_MODULE	= -T $(srctree)/scripts/module-common.lds $(CUSTOM_LDFLAGS)
+CFLAGS_KERNEL	= $(CUSTOM_CFLAGS)
+AFLAGS_KERNEL	= $(CUSTOM_AFLAGS)
+CFLAGS_GCOV	= -fprofile-arcs -ftest-coverage
 
 # Use LINUXINCLUDE when you must reference the include/ directory.
 # Needed to be compatible with the O= option
@@ -347,6 +347,10 @@ LINUXINCLUDE    := -I$(srctree)/arch/$(hdr-arch)/include -Iinclude \
 
 KBUILD_CPPFLAGS := -D__KERNEL__
 
+# Apply custom flags
+KBUILD_CFLAGS    += $(CUSTOM_CFLAGS)
+KBUILD_AFLAGS    += $(CUSTOM_AFLAGS)
+
 KBUILD_CFLAGS   := -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs \
 		   -fno-strict-aliasing -fno-common \
 		   -Werror-implicit-function-declaration \
@@ -613,7 +617,7 @@ endif
 LDFLAGS_BUILD_ID = $(patsubst -Wl$(comma)%,%,\
 			      $(call cc-ldoption, -Wl$(comma)--build-id,))
 KBUILD_LDFLAGS_MODULE += $(LDFLAGS_BUILD_ID)
-LDFLAGS_vmlinux += $(LDFLAGS_BUILD_ID)
+LDFLAGS_vmlinux += $(LDFLAGS_BUILD_ID) $(CUSTOM_LDFLAGS)
 
 ifeq ($(CONFIG_STRIP_ASM_SYMS),y)
 LDFLAGS_vmlinux	+= $(call ld-option, -X,)
diff --git a/init/Kconfig b/init/Kconfig
index 2de5b1c..df068f6 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -784,6 +784,53 @@ config CC_OPTIMIZE_FOR_SIZE
 
 	  If unsure, say Y.
 
+menu "Compiler/flags Options"
+
+config CUSTOM_CFLAGS
+    string "Custom CFLAGS for kernel"
+    default ""
+    help
+        You can use this to easily set custom gcc CFLAGS to be used for the
+        entire kernel (including modules).
+
+	No warning for you, i can't fix stupidity.
+
+        If unsure, leave blank.
+
+config CUSTOM_LDFLAGS
+    string "Custom LDFLAGS for kernel (consider this, if you're stupid)"
+    default ""
+    help
+	What the frick would you do this for!?!?!
+	No, seriously the kernel doesn't link against anything. lolz
+
+        If unsure, leave blank.
+
+config CUSTOM_AFLAGS
+    string "Custom AFLAGS for kernel"
+    default ""
+    help
+        You can use this to easily set custom gcc AFLAGS to be used for the
+        entire kernel (including modules).
+
+	No warning for you, i can't fix stupidity.
+
+        If unsure, leave blank.
+
+config CUSTOM_MAKEFLAGS
+    string "Custom MAKEFLAGS for kernel"
+    default ""
+    help
+        You can use this to easily set custom MAKEFLAGS to be used for building
+        the entire kernel.
+
+	You don't really need this, just type your make options when you build
+	your kernel (make -j723 ?)
+
+        If unsure, leave blank.
+
+endmenu
+
 config SYSCTL
 	bool
 
-- 
1.7.10

